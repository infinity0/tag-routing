<?xml version="1.0"?>

<project name="tag-routing" default="help" basedir=".">

	<property name="main.src" value="src"/>
	<property name="main.make" value="build/main"/>
	<property name="main.dst" value="dist"/>

	<property name="test.src" value="test"/>
	<property name="test.make" value="build/test"/>
	<property name="test.dst" value="run"/>

	<property name="doc.src" value="doc"/>
	<property name="doc.dst" value="site"/>
	<property name="doc.api" value="site/api"/>

	<property name="tmp" value="tmp"/>
	<property name="lib" value="lib"/>
	<path id="lib.path">
		<fileset dir="${lib}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<property name="junit.location" value="/usr/share/java/junit.jar"/>
	<property name="packagebase" value="tags" />

	<!-- =================================================================== -->
	<!-- Miscellaneoun                                                       -->
	<!-- =================================================================== -->

	<target name="dep">
		<mkdir dir="${tmp}"/>
		<!-- TODO NORM see README -->
		<delete dir="${tmp}"/>
	</target>

	<target name="all" depends="clean-all, package, doc" />

	<target name="clean-all" depends="clean, clean-doc"/>

	<target name="help">
		<echo message="Main targets"/>
		<echo message=""/>
		<echo message="  all         clean-builds everything"/>
		<echo message="  package     builds .jar packages in ./${main.dst}/"/>
		<echo message="  doc         builds documentation in ./${doc.dst}/"/>
		<echo message="  clean-all   cleans all build products"/>
		<echo message=""/>
		<echo message="Test parameters (-Dtest.PARAM=true)"/>
		<echo message=""/>
		<echo message="  verbose     Report additional information"/>
		<echo message="  extensive   Run extensive tests"/>
		<echo message=""/>
		<echo message="See build.xml for more details"/>
	</target>

	<!-- =================================================================== -->
	<!-- Standard build                                                      -->
	<!-- =================================================================== -->

	<target name="init">
		<mkdir dir="${main.make}"/>
		<mkdir dir="${main.dst}"/>
		<mkdir dir="${test.make}"/>
		<mkdir dir="${test.dst}"/>
	</target>

	<target name="build" depends="init, dep">
		<tstamp/>
		<javac srcdir="${main.src}" destdir="${main.make}" debug="on" optimize="on">
			<compilerarg value="-Xlint"/>
			<classpath>
				<path refid="lib.path"/>
			</classpath>
			<include name="**/*.java"/>
			<exclude name="**/package-info.java"/>
		</javac>
	</target>

	<target name="build-test" depends="build" unless="skip_tests">
		<javac srcdir="${test.src}" destdir="${test.make}" debug="on" optimize="on">
			<compilerarg value="-Xlint"/>
			<classpath>
				<path refid="lib.path"/>
				<pathelement path="${main.make}"/>
				<pathelement location="${junit.location}"/>
			</classpath>
			<include name="**/*.java"/>
		</javac>
	</target>

	<target name="test" depends="build-test" unless="skip_tests">
		<junit printsummary="yes" fork="yes" haltonfailure="yes" dir="${test.dst}" showoutput="yes">
			<classpath>
				<path refid="lib.path"/>
				<pathelement path="${main.make}"/>
				<pathelement path="${test.make}"/>
				<pathelement location="${junit.location}"/>
			</classpath>
			<assertions><enable/></assertions>
			<formatter type="plain" usefile="false"/>
			<batchtest fork="yes">
				<fileset dir="${test.make}">
					<include name="**/*Test.class"/>
				</fileset>
			</batchtest>
			<sysproperty key="test.verbose" value="${test.verbose}"/>
			<sysproperty key="test.extensive" value="${test.extensive}"/>
		</junit>
	</target>

	<target name="package" depends="build, test">
		<jar jarfile="${main.dst}/tags.jar" duplicate="fail">
			<manifest>
				<!--<attribute name="Main-Class" value="${packagebase}.proto.Main"/>-->
			</manifest>
			<fileset dir="${main.src}" casesensitive="no">
				<include name="**/*.txt"/>
				<include name="**/*.properties"/>
			</fileset>
			<fileset dir="${main.make}/">
				<exclude name="${version.src}"/>
			</fileset>
			<!--<zipgroupfileset dir="${lib}" includes="**/*.jar"/>-->
		</jar>
	</target>

	<target name="clean">
		<delete dir="${main.make}"/>
		<delete dir="${main.dst}"/>
		<delete dir="${test.make}"/>
		<delete dir="${test.dst}"/>
	</target>

	<!-- =================================================================== -->
	<!-- Test data generation                                                -->
	<!-- =================================================================== -->

	<property name="data.StoreGenerator" value="${test.src}/tags/store/StoreGenerator" />

	<fileset dir="." id="data.path">
		<include name="sample.*.txt"/>
		<include name="${data.StoreGenerator}.java"/>
	</fileset>

	<target name="regen-data">
		<exec executable="test/tags/store/store_gen.py"
		  errorproperty="sctl_gen.err" failonerror="true">
			<arg value="-j" />
			<arg value="${data.StoreGenerator}" />
			<arg value="-p" />
			<arg value="sample" />
		</exec>
	</target>

	<target name="clean-data">
		<delete>
			<fileset refid="data.path"/>
		</delete>
	</target>

	<target name="stash-data">
		<available file="${data.StoreGenerator}.java" property="data.StoreGenerator.present" />
		<fail message="No data to stash" unless="data.StoreGenerator.present" />
		<tstamp>
			<format property="STAMP" pattern="yyyyMMdd-HHmmss"/>
		</tstamp>
		<tar destfile="sample-data-${STAMP}.tar.bz2" compression="bzip2">
			<fileset refid="data.path"/>
		</tar>
		<antcall target="clean-data"/>
	</target>

	<!-- =================================================================== -->
	<!-- Documentation                                                       -->
	<!-- =================================================================== -->

	<target name="init-doc">
		<mkdir dir="${doc.dst}"/>
		<mkdir dir="${doc.api}"/>
	</target>

	<target name="javadoc" depends="init-doc, dep">
		<javadoc classpathref="lib.path" destdir="${doc.api}" author="true" version="true" use="true" private="true">
			<doclet name="info.bliki.doclet.standard.Standard" path="${lib}/bliki-doclet.jar"/>
			<fileset dir="${main.src}" defaultexcludes="yes">
				<include name="**/*.java"/>
			</fileset>
			<link href="http://java.sun.com/javase/6/docs/api"/>
		</javadoc>
	</target>

	<target name="doc" depends="javadoc">
		<exec executable="./build-doc.sh" failonerror="true"/>
	</target>

	<target name="clean-doc">
		<delete dir="${doc.api}"/>
		<delete dir="${doc.dst}"/>
	</target>

</project>
