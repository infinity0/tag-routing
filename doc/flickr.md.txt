% Scraping test data from flickr
% Ximin Luo

# Flickr data structures

each user has:

--------------- -------------------------------------
set             your own photos
collection      sets of sets
gallery         others' photos (structured)
tag             [obv]
people          ?
archive         ?
favorite        others' photos (unstructured)
contact         friends
group           ?
testimonial     ?
--------------- -------------------------------------

# Model

We base our model upon the notion of a "producer". This is a node that produces
content. Each producer has:

* a content-set of "their own" documents
* arcs to other producers; each arc has an associated source tag and weight

Each producer can generate a `tgraph` or `index`; the content-set is used to
generate internal nodes and arcs between nodes, and the producer-arcs are used
to generate arcs to other objects.

The producer network is separate from the social network; this is intended to
more closely resemble reality: friends don't always have what we want, and
people that do, aren't always our friends. However, we often look for them by
traversing the social network.

## Flickr

We treat users and groups as producers. User-producers have their sets
initialised with their own photos and favourites, and group-producers have
their sets initialised with the photos from the group pool.

For each producer, we generate arcs as follows.

1. we select a set of "representative" photos from the content set
2. we select a set of "related" producers from ones whose content set also
   contains any of our "representative" photos.
3. for each "related" producer, we infer some tags to link to it with.

# Scraping

subgraph of n users, ? photos

- pick a well-connected seed; breadth-search to obtain n sample users.
- for each sample user,
	- for each photo by them,
		- get photo's tag list, and save into database
- hereafter, only consider these sample users and photos. references to items
  not in our sample should be ignored.

# Generation

Generating the social network is trivial; use flickr's, directly.

Generating a `ptable` for each user is also trivial; link to each `tgraph` and
`index` created by a producer we are social-linked (not content-linked) to.

`tgraph` - TODO

`index` - TODO


# Large-scale structure

maybe need some way of generating "higher-level" indexes that cover more general
tags etc...

we can do this by using a clustering algorithms on producers, to create larger
super-producers, then infering social/content links between these again.

