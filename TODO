LocalIndex and LocalTGraph need to check for loops
Probability needs to check for div/0 errors

(cleanup)
- review Maps.viewSubMap
- review CompositeMap, MeanEntropyComposer
- test ProbabilityEntropyTGraphComposer, ProbabilityIndexComposer

(laterz)
- rename Probability to just Prob?
- rename SPUProbabilityInferer to ShortPathUnionProbInferer?
- possibly move AddressScheme.pushNode* into ProtoAddressScheme

(very later)
- add tags.rout.IndexComposer to the design document
- explain how tags are scored, in the design document


(architecture issues)
current architecture has each QueryProcessor spawn new Contact/Naming/Routing
layers. ideally, Contact should be split off from this, since the information
it uses is independent of any query.

to do this we first need to extend MessageReceiver.recv() to accept a "sender"
argument, or something.


----

make Producer use a igraph.Graph to store tag arcs

generateContentArcs:
	user-* arcs: favorites_getPublicList
		for each photo
			get producers from photos_getAllContexts (groups) and photos_getInfo (owner)
			for each producer in our sample
				for each tag of the photo
					for each cluster of the tag
						if producer's cover set significantly intersects with the cluster
							link to the producer using the top several tags of the cluster

	group-group arcs:
		--- TBD

